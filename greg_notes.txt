
12/1
--tried reducing false positives by weighting 0-class more,
----removing auto-feature weight, improved accuracy,
----when running example strategy it is not trading. need to investigate
----precision_weighted score could be useful, but hard to intuitively analyze
----consider implementing CV yourself so we can display false positive rate

--added some more features, none were breakthroughts
--bug fixes


12/6:
--filtered the data by only looking at instances where the EMA_10 and EMA_40 crossover.  Got a much better good-prediction ratio vs bad-prediction ratio
--false positives are still high

12/7:
--did some tests on crossover-filtered SVM, results look good especially for pred_col = log_returns_10+
--did some backtests as well, we seem to be learning a momentum following strategy


#####################crossover-filtered SVM results

######EXPERIMENT WITH 29 DAYS, QUOTES NOT MERGED DATA################

########## 3 crossovers for filtering

pred_col = log_returns_40+

Linear SVM, 3-class 5-fold CV, auto class weights

thresh = 2.5e-06

                                 Results
==============================================================================
    
           %
-1  0.300603
 0  0.362843
 1  0.336554
                        values
Training Size / Fold  175886.4
            -1      0      1       acc       bpr       fnr       fpr       gpr
run                                                                           
1      13879.0  13751  16342  0.416083  0.258215  0.587448  0.582310  0.452324
2      10963.0  17088  15921  0.415537  0.236989  0.603230  0.572534  0.402226
3      13366.0  12455  18151  0.411603  0.262791  0.630670  0.571691  0.466029
4      12212.0  17649  14110  0.416388  0.221961  0.572667  0.590951  0.401319
5      14233.0   9937  19801  0.410907  0.307576  0.559827  0.597638  0.492395
Total  12930.6  14176  16865  0.414104  0.257506  0.590769  0.583025  0.442859
                            -1         0         1
size_diff            -0.097188 -0.018472  0.117303
dEMA_100              0.102730 -0.231146  0.163715
dEMA_40_dema_10       0.393856 -0.261090 -0.122454
log_returns_std_100- -0.011945 -0.028014  0.040127
dEMA_10_dema_10      -0.790161  0.463455  0.363186
dEMA_10               0.377782 -0.622811  0.189077
log_returns_100-     -0.424791  0.359508  0.045867
log_returns_std_40-   0.039535 -0.044563  0.007361
log_returns_10-       0.279738  0.181060 -0.454892
dEMA_40              -0.152819  0.472842 -0.331490
momentum_dema_10      0.486118 -0.294221 -0.217588
log_returns_40-       0.438181 -0.530792  0.112833
momentum              0.096753 -0.074705 -0.014189
price_diff            0.004449 -0.004880  0.000404
log_returns_std_10-   0.018048 -0.015071 -0.002555
dEMA_100_dema_10      0.031097  0.011926 -0.081382
==============================================================================

Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights


                                 Results
==============================================================================
    
           %
-1  0.282154
 0  0.377069
 1  0.340778
                      values
Training Size / Fold    4012
          -1      0    1       acc       bpr       fnr       fpr       gpr
run                                                                       
1      306.0  299.0  398  0.404786  0.259319  0.585284  0.599432  0.457050
2      266.0  364.0  373  0.421735  0.213740  0.626374  0.550861  0.438168
3      292.0  270.0  441  0.417747  0.262739  0.581481  0.582538  0.487261
4      212.0  399.0  392  0.443669  0.204620  0.546366  0.562914  0.435644
5      328.0  244.0  431  0.401795  0.305825  0.553279  0.612648  0.475728
Total  280.8  315.2  407  0.417946  0.249249  0.578557  0.581678  0.458770
                            -1         0         1
size_diff            -0.074891 -0.028769  0.107106
dEMA_100              0.431473 -0.484306  0.144243
dEMA_40_dema_10      -0.238817  0.002418  0.273017
log_returns_std_100- -0.014144 -0.017932  0.032445
dEMA_10_dema_10      -0.300011  0.222061  0.114561
dEMA_10               0.235992 -0.629042  0.342575
log_returns_100-     -0.515105  0.429966  0.032658
log_returns_std_40-   0.054313 -0.058711  0.009632
log_returns_10-       0.138575  0.329783 -0.484351
dEMA_40              -0.736741  0.857457 -0.198433
momentum_dema_10      0.096154 -0.115410 -0.011429
log_returns_40-       0.706356 -0.733083  0.110037
momentum              0.054719 -0.140780  0.111410
price_diff            0.007626 -0.000088 -0.007687
log_returns_std_10-   0.011998  0.010902 -0.021984
dEMA_100_dema_10      0.383617 -0.088251 -0.341379
==============================================================================


#########
pred_col = 'log_returns_100+'

Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40, 100)

thresh = 2.5e-06

                                 Results
==============================================================================
    
           %
-1  0.202408
 0  0.545789
 1  0.251803
                        values
Training Size / Fold  175886.4
           -1        0       1       acc       bpr       fnr       fpr  \
run                                                                      
1      3081.0  35610.0  5281.0  0.518557  0.085287  0.435692  0.676274   
2      3870.0  35863.0  4239.0  0.528905  0.086049  0.439339  0.611543   
3      3442.0  34086.0  6444.0  0.496270  0.081543  0.463915  0.641007   
4      2445.0  37970.0  3556.0  0.565896  0.054847  0.394943  0.681886   
5      4198.0  33064.0  6709.0  0.523049  0.116769  0.423179  0.639956   
Total  3407.2  35318.6  5245.8  0.526535  0.084899  0.431414  0.650133   

            gpr  
run              
1      0.135887  
2      0.152277  
3      0.168351  
4      0.106732  
5      0.193563  
Total  0.151362  
                            -1         0         1
size_diff            -0.062287 -0.027587  0.090224
dEMA_100              0.351488 -0.601713  0.522368
dEMA_40_dema_10       1.016193 -0.438962 -0.534010
log_returns_std_100- -0.005524 -0.029518  0.040587
dEMA_10_dema_10      -1.162476 -0.168833  1.629632
dEMA_10               0.938261  0.006933 -1.219083
log_returns_100-     -0.851246  0.625224  0.023292
log_returns_std_40-   0.023483 -0.032828  0.015583
log_returns_10-      -0.078941  0.366640 -0.385102
dEMA_40              -0.631479  0.864376 -0.537072
momentum_dema_10      0.736956  0.115792 -1.054996
log_returns_40-       1.114732 -1.042722  0.278313
momentum              0.167604 -0.059523 -0.096733
price_diff            0.005763 -0.006416  0.002884
log_returns_std_10-   0.023915 -0.016308 -0.004835
dEMA_100_dema_10     -0.373639  0.512035 -0.357708
==============================================================================

Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40, 100)

thresh = 2.5e-06
  

                                 Results
==============================================================================
    
           %
-1  0.185045
 0  0.556530
 1  0.258425
                      values
Training Size / Fold    4012
       -1      0      1       acc       bpr       fnr       fpr       gpr
run                                                                      
1      84  788.0  131.0  0.499501  0.092342  0.437817  0.730233  0.130631
2      84  831.0   88.0  0.510469  0.075388  0.442840  0.715116  0.108647
3      67  860.0   76.0  0.544367  0.054705  0.433721  0.587413  0.129103
4      33  873.0   97.0  0.577268  0.051546  0.379152  0.715385  0.095361
5      72  855.0   76.0  0.524427  0.072314  0.454971  0.594595  0.123967
Total  68  841.4   93.6  0.531206  0.069259  0.429700  0.668548  0.117542
                            -1         0         1
size_diff            -0.050333 -0.007338  0.054736
dEMA_100              0.278933 -0.165598  0.030417
dEMA_40_dema_10      -0.108422 -0.003413  0.149768
log_returns_std_100- -0.014868 -0.000754  0.014512
dEMA_10_dema_10      -0.544176  0.079103  0.432585
dEMA_10               0.648808 -0.265725 -0.330289
log_returns_100-     -0.563366  0.279550  0.129006
log_returns_std_40-   0.028784 -0.040926  0.021895
log_returns_10-      -0.063687  0.190906 -0.182496
dEMA_40              -0.643221  0.297719  0.163211
momentum_dema_10      0.320371 -0.077986 -0.222784
log_returns_40-       0.834545 -0.418005 -0.172798
momentum              0.112850 -0.056558 -0.008006
price_diff            0.008964 -0.009570  0.002454
log_returns_std_10-   0.037172 -0.015005 -0.016748
dEMA_100_dema_10      0.388056 -0.029554 -0.385201
==============================================================================



Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 100)
Pred_col = log_returns_100+
thresh = 2.5e-06


                                 Results
==============================================================================
    
           %
-1  0.181922
 0  0.558352
 1  0.259725
                      values
Training Size / Fold  1398.4
         -1      0     1       acc       bpr       fnr       fpr       gpr
run                                                                       
1      45.0  229.0  76.0  0.457143  0.092857  0.427948  0.760331  0.207143
2      27.0  265.0  58.0  0.485714  0.050314  0.464151  0.670588  0.176101
3      37.0  266.0  47.0  0.494286  0.088050  0.447368  0.690476  0.163522
4      25.0  288.0  36.0  0.550143  0.078014  0.392361  0.721311  0.120567
5      24.0  285.0  40.0  0.518625  0.075145  0.463158  0.562500  0.161850
Total  31.6  266.6  51.4  0.501182  0.076876  0.438997  0.681041  0.165837
                            -1         0         1
size_diff            -0.066817 -0.023539  0.078954
dEMA_100              0.260965 -0.148114  0.047516
log_returns_std_100- -0.008065 -0.000135  0.007729
dEMA_10_dema_10      -0.196769 -0.038274  0.289980
dEMA_10               0.306229 -0.239933 -0.088213
log_returns_100-     -0.533826  0.178371  0.219068
log_returns_std_40-  -0.005421 -0.032461  0.041316
log_returns_10-      -0.075083  0.199427 -0.173575
dEMA_40_dema_10      -0.319383  0.249654 -0.009396
momentum_dema_10      0.036780  0.019935 -0.113302
log_returns_40-       0.835936 -0.298458 -0.310575
momentum             -0.643357 -0.180528  0.776758
dEMA_40              -0.683202  0.299685  0.173755
price_diff            0.027582 -0.006439 -0.012784
log_returns_std_10-   0.072375 -0.036019 -0.025026
dEMA_100_dema_10      0.427420 -0.196993 -0.187854
==============================================================================




                                 Results
==============================================================================
    
           %
-1  0.280892
 0  0.373570
 1  0.345538
                      values
Training Size / Fold  1398.4
          -1      0    1       acc       bpr       fnr       fpr       gpr
run                                                                       
1      105.0   91.0  154  0.411429  0.227488  0.604396  0.583012  0.511848
2      104.0  113.0  133  0.422857  0.214912  0.637168  0.548523  0.469298
3      112.0   77.0  161  0.422857  0.288991  0.545455  0.586081  0.518349
4       97.0  117.0  135  0.395415  0.227488  0.606838  0.603448  0.436019
5      123.0   79.0  147  0.449857  0.259912  0.569620  0.544444  0.541850
Total  108.2   95.4  146  0.420483  0.243758  0.592695  0.573102  0.495473
                            -1         0         1
size_diff            -0.090780 -0.021680  0.105626
dEMA_100              0.546483 -0.556640  0.125988
log_returns_std_100- -0.016428 -0.044593  0.063876
dEMA_10_dema_10      -0.168531 -0.018810  0.248570
dEMA_10               0.074963 -0.519698  0.378751
log_returns_100-     -0.670809  0.440764  0.164155
log_returns_std_40-   0.045711 -0.029226 -0.014543
log_returns_10-       0.083294  0.320574 -0.408402
dEMA_40_dema_10      -0.230958  0.537008 -0.351612
momentum_dema_10     -0.055602  0.052286 -0.049271
log_returns_40-       0.946366 -0.749990 -0.107161
momentum             -0.649703 -0.345176  0.891797
dEMA_40              -0.963687  0.999862 -0.139559
price_diff            0.009921  0.010995 -0.019320
log_returns_std_10-   0.029697 -0.001228 -0.025266
dEMA_100_dema_10      0.322255 -0.468820  0.146053
==============================================================================




Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 100)
Pred_col = log_returns_10+
thresh = 2.5e-06
  

                                 Results
==============================================================================
    
           %
-1  0.389016
 0  0.205950
 1  0.405034
                      values
Training Size / Fold  1398.4
          -1     0      1       acc       bpr       fnr       fpr       gpr
run                                                                        
1      156.0  21.0  173.0  0.520000  0.310469  0.714286  0.465046  0.635379
2      152.0  24.0  174.0  0.520000  0.318996  0.666667  0.466258  0.623656
3      148.0  16.0  186.0  0.522857  0.310469  0.750000  0.464072  0.646209
4      157.0  40.0  152.0  0.553009  0.247273  0.675000  0.417476  0.654545
5      170.0  11.0  168.0  0.541547  0.314286  0.636364  0.452663  0.660714
Total  156.6  22.4  170.6  0.531483  0.300299  0.688463  0.453103  0.644101
                            -1         0         1
size_diff            -0.196135  0.008882  0.185635
dEMA_100              0.238199 -0.303574  0.081823
log_returns_std_100- -0.020764  0.023679  0.004352
dEMA_10_dema_10      -0.050444 -0.143940  0.235859
dEMA_10              -0.832781 -0.209907  0.737341
log_returns_100-     -0.146087  0.104664  0.090770
log_returns_std_40-   0.048396 -0.064896  0.002278
log_returns_10-       0.662073  0.248561 -0.785427
dEMA_40_dema_10      -0.055837  0.557420 -0.235831
momentum_dema_10     -0.119904  0.136448 -0.036334
log_returns_40-       0.108708 -0.401030  0.087372
momentum             -0.393349 -0.562820  0.680186
dEMA_40              -0.094109  0.555757 -0.164556
price_diff            0.020367 -0.016619 -0.009871
log_returns_std_10-   0.047994 -0.067042  0.011412
dEMA_100_dema_10      0.116833 -0.464807  0.035873
==============================================================================



                                 Results
==============================================================================
    
           %
-1  0.386839
 0  0.204786
 1  0.408375
                      values
Training Size / Fold    4012
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.514457  0.434604  0.325436  0.820513  0.471992  0.634663
2      0.513460  0.434201  0.337500  0.741935  0.478395  0.633750
3      0.494516  0.423191  0.367684  0.571429  0.505020  0.627226
4      0.526421  0.440875  0.339506  0.666667  0.469450  0.643210
5      0.521436  0.444096  0.330380  0.714286  0.475228  0.656962
Total  0.514058  0.435393  0.340101  0.702966  0.480017  0.639162
                            -1         0         1
size_diff            -0.162395  0.002417  0.165767
dEMA_100              0.192362 -0.311314  0.217891
log_returns_std_100- -0.019234  0.013158  0.008130
log_returns_std_10-   0.013257 -0.031245  0.012240
dEMA_10              -0.823953 -0.292306  0.748000
log_returns_100-      0.057486  0.107386 -0.152856
log_returns_std_40-   0.043164 -0.055013  0.003034
log_returns_10-       0.659357  0.266012 -0.880944
dEMA_40               0.033452  0.530453 -0.406129
momentum_dema_10     -0.065808  0.005997 -0.047610
log_returns_40-      -0.027805 -0.513181  0.460376
dEMA_10_dema_10      -0.094297  0.011602  0.250154
dEMA_100_dema_10     -0.021380 -0.278978 -0.082110
price_diff            0.028986 -0.028543 -0.007401
momentum              0.178429 -0.174972  0.051593
dEMA_40_dema_10       0.103836  0.277286 -0.106661
==============================================================================




Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40, 100)
Pred_col = log_returns_10+
thresh = 5e-06

                                 Results
==============================================================================
    
           %
-1  0.304088
 0  0.359721
 1  0.336191
                      values
Training Size / Fold    4012
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.469591  0.473894  0.227554  0.556000  0.521912  0.557276
2      0.486540  0.489077  0.209553  0.541806  0.501420  0.540832
3      0.491525  0.500906  0.233807  0.481481  0.515883  0.601896
4      0.490528  0.490583  0.180704  0.558904  0.481191  0.506891
5      0.466600  0.477947  0.249206  0.511962  0.539043  0.580952
Total  0.480957  0.486482  0.220165  0.530031  0.511890  0.557569
                            -1         0         1
size_diff            -0.159133 -0.003620  0.164834
dEMA_100              0.248248 -0.190073  0.134978
log_returns_std_100- -0.016661  0.012897  0.005605
log_returns_std_10-   0.003524 -0.006087  0.006721
dEMA_10              -0.789406 -0.134860  0.715508
log_returns_100-      0.176016 -0.106016 -0.081499
log_returns_std_40-   0.064490 -0.081919  0.023374
log_returns_10-       0.601534  0.138002 -0.792180
dEMA_40              -0.033697  0.179980 -0.222681
momentum_dema_10     -0.042555  0.007455 -0.049146
log_returns_40-       0.010806 -0.131140  0.243242
dEMA_10_dema_10      -0.145725  0.022186  0.244194
dEMA_100_dema_10     -0.087757 -0.162893  0.028136
price_diff            0.039381 -0.044070  0.000651
momentum              0.330513 -0.237772  0.021652
dEMA_40_dema_10       0.231783  0.172406 -0.233348
==============================================================================



Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40, 100)
Pred_col = log_returns_10+
thresh = 1e-05

                                 Results
==============================================================================
    
           %
-1  0.178265
 0  0.625125
 1  0.196610
                      values
Training Size / Fold    4012
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.599202  0.477962  0.047739  0.344972  0.540070  0.331658
2      0.634098  0.487417  0.057441  0.317881  0.512097  0.315927
3      0.603190  0.472427  0.055263  0.329640  0.569395  0.318421
4      0.666002  0.501294  0.048159  0.285530  0.497817  0.325779
5      0.656032  0.535159  0.062842  0.277228  0.503378  0.401639
Total  0.631705  0.494852  0.054289  0.311050  0.524551  0.338685
                            -1         0         1
size_diff            -0.112304 -0.018737  0.150165
dEMA_100              0.294564 -0.344316  0.368792
log_returns_std_100- -0.012348  0.003842  0.009129
log_returns_std_10-   0.018058 -0.021760  0.021621
dEMA_10              -0.357168 -0.382332  0.863839
log_returns_100-      0.030301  0.072953 -0.236649
log_returns_std_40-   0.076762 -0.086743  0.024672
log_returns_10-       0.562133  0.241307 -0.965471
dEMA_40              -0.084550  0.420894 -0.645383
momentum_dema_10      0.206048 -0.111204 -0.054065
log_returns_40-       0.113386 -0.424464  0.660988
dEMA_10_dema_10      -0.481912  0.216642  0.197351
dEMA_100_dema_10     -0.010306 -0.027743 -0.098998
price_diff            0.036613 -0.049803  0.017321
momentum              0.420007 -0.301591  0.064574
dEMA_40_dema_10       0.280773 -0.058841 -0.057291
==============================================================================









Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 2.5e-06

                                 Results
==============================================================================
    
           %
-1  0.392371
 0  0.195407
 1  0.412223
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr    fnr       fpr       gpr
run                                                           
1      0.521401  0.418930  0.359813  0.875  0.472332  0.623832
2      0.511673  0.431497  0.355392  0.500  0.488235  0.639706
3      0.484436  0.408666  0.395122  0.000  0.516569  0.604878
4      0.525292  0.438886  0.344660  0.500  0.474609  0.652913
5      0.530214  0.444465  0.334963  0.500  0.469667  0.662592
Total  0.514603  0.428489  0.357990  0.475  0.484283  0.636784
                            -1         0         1
size_diff            -0.144214 -0.008683  0.164296
dEMA_100              0.188057 -0.074856 -0.067001
log_returns_std_100- -0.025059  0.006521  0.015936
log_returns_std_10-  -0.020272 -0.003493  0.018870
dEMA_10              -0.863809  0.154523  0.545852
log_returns_100-      0.116919 -0.079764 -0.079957
log_returns_std_40-   0.041987 -0.029073 -0.012964
log_returns_10-       0.753600  0.138263 -0.865782
dEMA_40              -0.044949  0.146434  0.098421
momentum_dema_10     -0.104792  0.103625 -0.041863
log_returns_40-      -0.311340 -0.182994  0.427762
dEMA_10_dema_10      -0.007497 -0.200544  0.265407
dEMA_100_dema_10     -0.179329  0.178006 -0.120158
price_diff            0.031526 -0.022906 -0.010826
momentum              0.198941 -0.135525 -0.085681
dEMA_40_dema_10       0.241985 -0.142404 -0.062677
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  #=======================================================================================================================

Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 5e-06

                                 Results
==============================================================================
    
           %
-1  0.310627
 0  0.349942
 1  0.339432
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.443580  0.441340  0.249275  0.630252  0.534177  0.533333
2      0.461089  0.464152  0.251497  0.555556  0.534005  0.553892
3      0.468872  0.473740  0.250746  0.545455  0.527228  0.570149
4      0.459144  0.465642  0.206687  0.586207  0.523035  0.534954
5      0.434698  0.444003  0.278287  0.578313  0.562791  0.574924
Total  0.453477  0.457775  0.247299  0.579156  0.536247  0.553451
                            -1         0         1
size_diff            -0.155567  0.001656  0.165397
dEMA_100              0.210807 -0.197601  0.069692
log_returns_std_100- -0.009494  0.000378  0.008564
log_returns_std_10-  -0.012218 -0.005797  0.019737
dEMA_10              -0.804113  0.176864  0.497656
log_returns_100-      0.299699 -0.297477 -0.005480
log_returns_std_40-   0.040097 -0.034236 -0.000643
log_returns_10-       0.742524  0.030271 -0.792087
dEMA_40              -0.049041  0.183519 -0.068727
momentum_dema_10     -0.065283  0.137250 -0.112560
log_returns_40-      -0.429158  0.224075  0.225779
dEMA_10_dema_10      -0.141793 -0.158693  0.361512
dEMA_100_dema_10     -0.322621  0.339181 -0.128599
price_diff            0.042754 -0.044501 -0.001649
momentum              0.349693 -0.358061  0.054388
dEMA_40_dema_10       0.474098 -0.281279 -0.122242
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:125: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  

Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 1e-05

                                 Results
==============================================================================
    
           %
-1  0.182172
 0  0.618529
 1  0.199299
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.583658  0.471613  0.050691  0.371585  0.527027  0.322581
2      0.640078  0.503634  0.049751  0.320312  0.476923  0.338308
3      0.620623  0.495285  0.050000  0.326146  0.517483  0.345000
4      0.669261  0.499545  0.041176  0.269720  0.528926  0.335294
5      0.635478  0.515619  0.046875  0.303030  0.513333  0.380208
Total  0.629819  0.497139  0.047699  0.318159  0.512738  0.344278
                            -1         0         1
size_diff            -0.114144 -0.005092  0.144440
dEMA_100              0.220263 -0.070146 -0.044734
log_returns_std_100- -0.012487  0.018852 -0.011380
log_returns_std_10-  -0.001202 -0.015010  0.031100
dEMA_10              -0.276390 -0.224697  0.577795
log_returns_100-      0.246055 -0.024833 -0.244992
log_returns_std_40-   0.068257 -0.081684  0.030898
log_returns_10-       0.806669  0.098349 -0.956609
dEMA_40              -0.035927 -0.049807  0.140374
momentum_dema_10      0.250100 -0.130770 -0.051419
log_returns_40-      -0.511730 -0.123788  0.689794
dEMA_10_dema_10      -0.555051  0.230742  0.223646
dEMA_100_dema_10     -0.028159 -0.007259 -0.011180
price_diff            0.047528 -0.059975  0.017338
momentum              0.505984 -0.161622 -0.240284
dEMA_40_dema_10       0.342266 -0.091042 -0.171266
==============================================================================




Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 2.5e-06

                                 Results
==============================================================================
    
           %
-1  0.392371
 0  0.195407
 1  0.412223
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.523346  0.420588  0.357477  0.875000  0.470356  0.626168
2      0.515564  0.434771  0.352941  0.333333  0.485323  0.644608
3      0.484436  0.408666  0.395122  0.000000  0.516569  0.604878
4      0.525292  0.438886  0.344660  0.500000  0.474609  0.652913
5      0.530214  0.444465  0.334963  0.500000  0.469667  0.662592
Total  0.515771  0.429475  0.357033  0.441667  0.483305  0.638232
                            -1         0         1
size_diff            -0.144377 -0.008485  0.164228
dEMA_100              0.300437 -0.094458 -0.130112
log_returns_std_100- -0.024210  0.006539  0.016187
log_returns_std_10-  -0.019903 -0.003666  0.018246
dEMA_10              -0.747890  0.115754  0.438643
log_returns_100-      0.117634 -0.079675 -0.082191
log_returns_std_40-   0.042668 -0.029491 -0.012656
log_returns_10-       0.761939  0.139511 -0.875610
dEMA_40               0.069667  0.123407  0.042384
momentum_dema_10     -0.166598  0.115116 -0.006480
dEMA_sum             -0.378537  0.088502  0.254651
log_returns_40-      -0.330945 -0.185122  0.448016
dEMA_10_dema_10       0.084125 -0.217454  0.212752
dEMA_100_dema_10     -0.235992  0.184554 -0.110002
price_diff            0.031429 -0.024773 -0.010983
momentum              0.206919 -0.133163 -0.083677
dEMA_40_dema_10       0.242528 -0.135805 -0.042360
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:38: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  from pydev_console_utils import BaseInterpreterInterface, BaseStdIn

Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 5e-06

                                 Results
==============================================================================
    
           %
-1  0.310627
 0  0.349942
 1  0.339432
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.443580  0.441242  0.249275  0.628099  0.534351  0.530435
2      0.461089  0.464152  0.251497  0.555556  0.534005  0.553892
3      0.472763  0.477622  0.247761  0.540541  0.523573  0.573134
4      0.461089  0.467444  0.203647  0.585034  0.520436  0.534954
5      0.434698  0.444535  0.278287  0.580247  0.562500  0.577982
Total  0.454644  0.458999  0.246094  0.577895  0.534973  0.554079
                            -1         0         1
size_diff            -0.155787  0.001322  0.165449
dEMA_100              0.309036 -0.233166  0.008950
log_returns_std_100- -0.009273  0.000398  0.008799
log_returns_std_10-  -0.012550 -0.005235  0.019351
dEMA_10              -0.685528  0.162025  0.424550
log_returns_100-      0.301927 -0.297002 -0.007235
log_returns_std_40-   0.040646 -0.034737 -0.000685
log_returns_10-       0.759584  0.025693 -0.805975
dEMA_40               0.043105  0.151767 -0.126475
momentum_dema_10     -0.123145  0.160808 -0.075116
dEMA_sum             -0.346731  0.099077  0.223052
log_returns_40-      -0.462392  0.234596  0.251862
dEMA_10_dema_10      -0.057025 -0.193946  0.304604
dEMA_100_dema_10     -0.366178  0.360239 -0.104873
price_diff            0.041535 -0.045359 -0.001627
momentum              0.352951 -0.361344  0.054606
dEMA_40_dema_10       0.456765 -0.284944 -0.114488
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:64: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  

Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 1e-05

                                 Results
==============================================================================
    
           %
-1  0.182172
 0  0.618529
 1  0.199299
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.583658  0.471613  0.050691  0.371585  0.527027  0.322581
2      0.636187  0.501339  0.049751  0.321990  0.484848  0.338308
3      0.620623  0.502037  0.045000  0.325137  0.513514  0.360000
4      0.669261  0.496128  0.041176  0.270886  0.529412  0.329412
5      0.637427  0.516658  0.046875  0.302198  0.510067  0.380208
Total  0.629431  0.497555  0.046699  0.318359  0.512974  0.346102
                            -1         0         1
size_diff            -0.114437 -0.005084  0.144594
dEMA_100              0.265235 -0.065365 -0.105968
log_returns_std_100- -0.011870  0.018316 -0.011682
log_returns_std_10-  -0.001463 -0.015092  0.030935
dEMA_10              -0.270387 -0.128686  0.453961
log_returns_100-      0.246632 -0.031254 -0.242241
log_returns_std_40-   0.068544 -0.082974  0.030901
log_returns_10-       0.807631  0.075278 -0.947160
dEMA_40               0.009674 -0.054560  0.078032
momentum_dema_10      0.222365 -0.130576 -0.019409
dEMA_sum             -0.112272 -0.106110  0.278751
log_returns_40-      -0.513344 -0.069515  0.672091
dEMA_10_dema_10      -0.515234  0.231520  0.173802
dEMA_100_dema_10     -0.063623  0.018458  0.001192
price_diff            0.047832 -0.060622  0.017286
momentum              0.514401 -0.179772 -0.231885
dEMA_40_dema_10       0.355457 -0.123133 -0.167129
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  try:

Filtered-data Rbf SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 2.5e-06

                                 Results
==============================================================================
    
           %
-1  0.392371
 0  0.195407
 1  0.412223
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.429961  0.408521  0.235981  0.831250  0.451977  0.453271
2      0.457198  0.456878  0.178922  0.755102  0.411950  0.458333
3      0.443580  0.441723  0.200000  0.763158  0.435185  0.446341
4      0.445525  0.437647  0.201456  0.774725  0.433735  0.456311
5      0.452242  0.443141  0.242054  0.743750  0.458924  0.466993
Total  0.445701  0.437582  0.211683  0.773597  0.438354  0.456250
[]
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:114: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  

Filtered-data Rbf SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 5e-06

                                 Results
==============================================================================
    
           %
-1  0.310627
 0  0.349942
 1  0.339432
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.455253  0.456340  0.173913  0.611354  0.491228  0.420290
2      0.466926  0.464283  0.143713  0.588462  0.476378  0.398204
3      0.505837  0.503751  0.146269  0.554622  0.442029  0.459701
4      0.476654  0.472646  0.136778  0.580913  0.472527  0.437690
5      0.473684  0.473122  0.192661  0.550725  0.509804  0.458716
Total  0.475671  0.474028  0.158667  0.577215  0.478393  0.434920
[]
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:138: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  def close(self):

Filtered-data Rbf SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 1e-05

                                 Results
==============================================================================
    
           %
-1  0.182172
 0  0.618529
 1  0.199299
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.488327  0.486528  0.170507  0.337900  0.640678  0.488479
2      0.550584  0.488536  0.109453  0.324324  0.619266  0.412935
3      0.544747  0.514924  0.115000  0.305660  0.614458  0.480000
4      0.605058  0.528407  0.094118  0.245955  0.619512  0.458824
5      0.547758  0.532616  0.140625  0.266129  0.626415  0.515625
Total  0.547295  0.510202  0.125940  0.295994  0.624066  0.471173
[]
==============================================================================


Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 5e-06

                                 Results
==============================================================================
    
           %
-1  0.310627
 0  0.349942
 1  0.339432
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.447471  0.445481  0.252174  0.620690  0.532663  0.539130
2      0.461089  0.464110  0.254491  0.550847  0.535354  0.550898
3      0.474708  0.479425  0.241791  0.543860  0.520000  0.573134
4      0.461089  0.467259  0.209726  0.577181  0.523288  0.528875
5      0.438596  0.448434  0.281346  0.564103  0.560920  0.584098
Total  0.456591  0.460942  0.247906  0.571336  0.534445  0.555227
                            -1         0         1
size_diff            -0.156352  0.001705  0.165180
dEMA_100              0.294564 -0.244178  0.008518
log_returns_std_100- -0.008795  0.000093  0.008795
log_returns_std_10-  -0.012677 -0.005754  0.020492
dEMA_sum_dema_10      0.002478 -0.065549  0.067727
dEMA_10              -0.659171  0.185620  0.425127
log_returns_100-      0.299967 -0.298903 -0.005761
log_returns_std_40-   0.040256 -0.035059 -0.001325
log_returns_10-       0.743423  0.022563 -0.799552
dEMA_40               0.025498  0.139767 -0.138756
momentum_dema_10     -0.111552  0.172168 -0.080555
dEMA_sum             -0.338494  0.107900  0.219771
log_returns_40-      -0.428712  0.243718  0.241868
dEMA_10_dema_10      -0.075889 -0.177339  0.279431
dEMA_100_dema_10     -0.343266  0.391909 -0.110936
price_diff            0.041319 -0.045751 -0.001361
momentum              0.345263 -0.365724  0.051310
dEMA_40_dema_10       0.449421 -0.275041 -0.146725
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:32: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  except NameError: # version < 2.3 -- didn't have the True/False builtins

Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 1e-05

                                 Results
==============================================================================
    
           %
-1  0.182172
 0  0.618529
 1  0.199299
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.583658  0.473339  0.046083  0.372603  0.523490  0.327189
2      0.638132  0.500233  0.049751  0.322078  0.480620  0.333333
3      0.618677  0.498769  0.050000  0.325137  0.520270  0.355000
4      0.667315  0.492582  0.041176  0.272727  0.533898  0.323529
5      0.633528  0.514581  0.046875  0.303867  0.516556  0.380208
Total  0.628262  0.495901  0.046777  0.319282  0.514967  0.343852
                            -1         0         1
size_diff            -0.114131 -0.005206  0.144007
dEMA_100              0.270574 -0.067298 -0.115885
log_returns_std_100- -0.011730  0.017874 -0.011323
log_returns_std_10-  -0.001868 -0.015673  0.031920
dEMA_sum_dema_10     -0.119961  0.061558  0.030839
dEMA_10              -0.277115 -0.130789  0.462758
log_returns_100-      0.245672 -0.029988 -0.241593
log_returns_std_40-   0.069404 -0.083389  0.031068
log_returns_10-       0.806820  0.075585 -0.952437
dEMA_40               0.017827 -0.050706  0.054074
momentum_dema_10      0.224390 -0.129089 -0.027000
dEMA_sum             -0.113011 -0.106632  0.275325
log_returns_40-      -0.514987 -0.071380  0.684131
dEMA_10_dema_10      -0.455337  0.197733  0.169270
dEMA_100_dema_10     -0.035483  0.005172  0.007740
price_diff            0.047537 -0.060904  0.016562
momentum              0.517661 -0.179281 -0.243475
dEMA_40_dema_10       0.403131 -0.133831 -0.191325
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:59: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  """

Filtered-data Rbf SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 5e-06

                                 Results
==============================================================================
    
           %
-1  0.310627
 0  0.349942
 1  0.339432
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.451362  0.451940  0.171014  0.616379  0.492908  0.414493
2      0.466926  0.464325  0.137725  0.592308  0.472441  0.401198
3      0.503891  0.501888  0.140299  0.560669  0.440000  0.459701
4      0.463035  0.459472  0.136778  0.595833  0.485401  0.428571
5      0.473684  0.472463  0.189602  0.551402  0.508361  0.449541
Total  0.471780  0.470018  0.155084  0.583318  0.479822  0.430701
[]
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:83: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  from pydev_imports import execfile

Filtered-data Rbf SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 1e-05

                                 Results
==============================================================================
    
           %
-1  0.182172
 0  0.618529
 1  0.199299
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.484436  0.480830  0.165899  0.346847  0.643836  0.479263
2      0.548638  0.489642  0.104478  0.326531  0.618182  0.417910
3      0.546693  0.511306  0.125000  0.302239  0.617886  0.470000
4      0.607004  0.526799  0.094118  0.246795  0.618812  0.452941
5      0.549708  0.533654  0.145833  0.262097  0.626415  0.515625
Total  0.547296  0.508446  0.127065  0.296902  0.625026  0.467148
[]
==============================================================================




Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 5e-06
C = 0.1

                                 Results
==============================================================================
    
           %
-1  0.310627
 0  0.349942
 1  0.339432
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.439689  0.437332  0.260870  0.633028  0.540741  0.539130
2      0.476654  0.480298  0.254491  0.517857  0.524876  0.571856
3      0.468872  0.473996  0.244776  0.555556  0.524631  0.576119
4      0.455253  0.462507  0.197568  0.605634  0.521505  0.541033
5      0.450292  0.460752  0.275229  0.538462  0.551724  0.596330
Total  0.458152  0.462977  0.246587  0.570107  0.532695  0.564894
                            -1         0         1
size_diff            -0.152768  0.002531  0.161875
dEMA_100              0.216596 -0.024043 -0.096775
log_returns_std_100- -0.015190  0.004424  0.010191
log_returns_std_10-  -0.013013 -0.005627  0.019390
dEMA_sum_dema_10     -0.064834 -0.006905  0.060216
dEMA_10              -0.402948  0.001618  0.344933
log_returns_100-      0.026381 -0.168012  0.120482
log_returns_std_40-   0.043745 -0.034606 -0.001158
log_returns_10-       0.591416  0.078249 -0.682246
dEMA_40               0.021104 -0.000093  0.080013
momentum_dema_10      0.020090  0.045069 -0.056009
dEMA_sum             -0.198543 -0.003506  0.214780
log_returns_40-      -0.004117  0.047718 -0.023230
dEMA_10_dema_10      -0.241216 -0.019377  0.248243
dEMA_100_dema_10      0.088362  0.041181 -0.155411
price_diff            0.040731 -0.044140 -0.001714
momentum              0.136766 -0.151366  0.075793
dEMA_40_dema_10       0.111893 -0.027695 -0.078543
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:35: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  setattr(__builtin__, 'True', 1) #Python 3.0 does not accept __builtin__.True = 1 in its syntax

Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 1e-05
C = 0.1

                                 Results
==============================================================================
    
           %
-1  0.182172
 0  0.618529
 1  0.199299
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.579767  0.464946  0.050691  0.375000  0.534247  0.313364
2      0.634241  0.498103  0.049751  0.323760  0.488550  0.333333
3      0.616732  0.490822  0.050000  0.328841  0.524476  0.340000
4      0.669261  0.496968  0.041176  0.270886  0.529412  0.329412
5      0.639376  0.512527  0.046875  0.303523  0.506944  0.369792
Total  0.627875  0.492673  0.047699  0.320402  0.516726  0.337180

                            -1         0         1
size_diff            -0.111966 -0.002765  0.141653
dEMA_100              0.203998 -0.009868 -0.070931
log_returns_std_100- -0.017703  0.023513 -0.008696
log_returns_std_10-  -0.000723 -0.016739  0.030174
dEMA_sum_dema_10     -0.082711  0.014454  0.045375
dEMA_10              -0.310190 -0.049934  0.334458
log_returns_100-     -0.008127 -0.051585  0.041364
log_returns_std_40-   0.067045 -0.074853  0.030422
log_returns_10-       0.597189  0.062221 -0.704647
dEMA_40               0.011840 -0.023085  0.132523
momentum_dema_10      0.098027 -0.007380 -0.060723
dEMA_sum             -0.147198 -0.038851  0.228401
log_returns_40-       0.016477 -0.040039  0.065173
dEMA_10_dema_10      -0.289868  0.039880  0.215210
dEMA_100_dema_10      0.165614 -0.026960 -0.144743
price_diff            0.047684 -0.060258  0.017889
momentum              0.194172 -0.079507 -0.011332
dEMA_40_dema_10       0.064286  0.005321 -0.082036
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:63: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  

Filtered-data Rbf SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 5e-06
C = 0.1

                                 Results
==============================================================================
    
           %
-1  0.310627
 0  0.349942
 1  0.339432
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.466926  0.465091  0.214493  0.589595  0.504399  0.489855
2      0.441634  0.441819  0.209581  0.609467  0.533333  0.482036
3      0.470817  0.472700  0.214925  0.563636  0.512894  0.507463
4      0.416342  0.414052  0.279635  0.566474  0.592375  0.422492
5      0.430799  0.433327  0.311927  0.514925  0.588391  0.477064
Total  0.445304  0.445398  0.246112  0.568820  0.546278  0.475782
[]
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:88: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  

Filtered-data Rbf SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 1e-05
C = 0.1

                                 Results
==============================================================================
    
           %
-1  0.182172
 0  0.618529
 1  0.199299
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.464981  0.471607  0.193548  0.341584  0.660256  0.488479
2      0.451362  0.455275  0.208955  0.321951  0.699029  0.462687
3      0.476654  0.476763  0.190000  0.308756  0.680135  0.475000
4      0.498054  0.468278  0.205882  0.246862  0.723636  0.447059
5      0.438596  0.463256  0.244792  0.277778  0.714715  0.494792
Total  0.465929  0.467036  0.208636  0.299386  0.695554  0.473603
[]
==============================================================================



Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 5e-06
C = 10

                                 Results
==============================================================================
    
           %
-1  0.310627
 0  0.349942
 1  0.339432
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.449416  0.446830  0.217391  0.632653  0.517711  0.513043
2      0.457198  0.459638  0.248503  0.559701  0.536842  0.526946
3      0.455253  0.459401  0.247761  0.573770  0.535714  0.543284
4      0.486381  0.487392  0.161094  0.565000  0.480892  0.495441
5      0.436647  0.444725  0.250765  0.596330  0.554455  0.550459
Total  0.456979  0.459597  0.225103  0.585491  0.525123  0.525835
                            -1         0         1
size_diff            -0.153041 -0.002297  0.171462
dEMA_100              0.478226 -1.030415  0.550967
log_returns_std_100- -0.003176 -0.006367  0.010881
log_returns_std_10-  -0.011984 -0.002910  0.018273
dEMA_sum_dema_10      0.082320 -0.328082  0.214640
dEMA_10              -0.763133  0.776465  0.198409
log_returns_100-      0.478187 -0.345492 -0.147814
log_returns_std_40-   0.024169 -0.036444  0.003958
log_returns_10-       0.793714 -0.006404 -0.858410
dEMA_40              -0.325342  0.925165 -0.828430
momentum_dema_10     -0.256342  0.816406 -0.481776
dEMA_sum             -0.469063  0.548181 -0.016810
log_returns_40-      -0.582938  0.336536  0.449542
dEMA_10_dema_10       0.124243 -1.011045  0.818181
dEMA_100_dema_10     -0.701633  1.197821 -0.359812
price_diff            0.013547 -0.052478  0.002546
momentum              0.542574 -0.698799  0.159715
dEMA_40_dema_10       0.703392 -0.472648 -0.342728
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:35: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  setattr(__builtin__, 'True', 1) #Python 3.0 does not accept __builtin__.True = 1 in its syntax

Filtered-data Linear SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 1e-05
C = 10

                                 Results
==============================================================================
    
           %
-1  0.182172
 0  0.618529
 1  0.199299
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.583658  0.456620  0.032258  0.382812  0.515385  0.290323
2      0.622568  0.459499  0.034826  0.345588  0.500000  0.263682
3      0.622568  0.485848  0.055000  0.328084  0.518797  0.320000
4      0.661479  0.499144  0.058824  0.264398  0.553030  0.347059
5      0.641326  0.515860  0.057292  0.297814  0.510204  0.375000
Total  0.626320  0.483394  0.047640  0.323739  0.519483  0.319213
                            -1         0         1
size_diff            -0.111367 -0.010855  0.147457
dEMA_100              0.170594 -0.103823 -0.045939
log_returns_std_100-  0.008244  0.002165  0.002442
log_returns_std_10-  -0.019375 -0.001518  0.027115
dEMA_sum_dema_10     -0.275232  0.210736  0.018228
dEMA_10               0.198217 -0.779088  0.786482
log_returns_100-      0.421848  0.029233 -0.545329
log_returns_std_40-   0.034077 -0.080508  0.034964
log_returns_10-       0.889909  0.185118 -1.206060
dEMA_40              -0.111331  0.442808 -0.420898
momentum_dema_10      0.653642 -0.573451  0.018270
dEMA_sum              0.119905 -0.364591  0.347626
log_returns_40-      -0.791813 -0.309593  1.378443
dEMA_10_dema_10      -1.032293  0.783053  0.113762
dEMA_100_dema_10     -0.092142 -0.004674  0.331565
price_diff            0.047202 -0.061482  0.029415
momentum              0.806645 -0.415158 -0.387478
dEMA_40_dema_10       0.913532 -0.618635 -0.433448
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:63: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  

Filtered-data Rbf SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 5e-06
C = 10

                                 Results
==============================================================================
    
           %
-1  0.310627
 0  0.349942
 1  0.339432
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.445525  0.444995  0.150725  0.645455  0.486395  0.437681
2      0.433852  0.431507  0.200599  0.598214  0.541379  0.398204
3      0.494163  0.493328  0.143284  0.573333  0.453287  0.471642
4      0.478599  0.475017  0.109422  0.593625  0.452471  0.437690
5      0.448343  0.447944  0.195719  0.580488  0.532468  0.440367
Total  0.460097  0.458558  0.159950  0.598223  0.493200  0.437117
[]
==============================================================================
C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.5.4\helpers\pydev\pydevconsole.py:88: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  

Filtered-data Rbf SVM, 3-class 5-fold CV, auto class weights

crossover_hls = (10, 40)
Pred_col = log_returns_10+
thresh = 1e-05
C = 10

                                 Results
==============================================================================
    
           %
-1  0.182172
 0  0.618529
 1  0.199299
                      values
Training Size / Fold  2055.2
            acc      acc*       bpr       fnr       fpr       gpr
run                                                              
1      0.468872  0.461070  0.133641  0.384279  0.649123  0.460829
2      0.523346  0.457272  0.124378  0.341297  0.656109  0.378109
3      0.536965  0.502118  0.120000  0.313433  0.626016  0.460000
4      0.607004  0.519965  0.094118  0.250000  0.621212  0.441176
5      0.526316  0.499380  0.109375  0.310345  0.642857  0.468750
Total  0.532501  0.487961  0.116302  0.319871  0.639063  0.441773
[]
==============================================================================